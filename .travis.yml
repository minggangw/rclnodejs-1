os:
  - linux
  - osx
osx_image: xcode8.3
services:
  - docker

sudo: required

branches:
  only:
  - develop
  - master

before_install:
  # LINUX
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo docker pull ubuntu:xenial; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo docker build -t rcldocker .; fi

  # MACOS
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then /usr/bin/yes | pip uninstall numpy; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew tap homebrew/science; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew tap ros/deps; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install python3 wget cppcheck tinyxml eigen pcre; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install asio tinyxml2; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install opencv; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then  python3 -m pip install argcomplete coverage empy flake8 flake8-blind-except flake8-builtins flake8-class-newline flake8-comprehensions flake8-deprecated flake8-docstrings flake8-import-order flake8-quotes mock nose pep8 pydocstyle pyflakes pyyaml setuptools vcstool; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install opencv; fi

  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then  wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then . $HOME/.nvm/nvm.sh; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then nvm install v6.11.3; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then nvm alias default v6.11.3; fi

script:
  - echo $TRAVIS_OS_NAME
  - echo $PWD
  - node --version
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export PATH=/usr/local/Cellar/numpy/1.13.1_1/libexec/nose/bin:$PATH; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then mkdir -p ~/ros2_ws/src; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cd ~/ros2_ws; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget https://raw.githubusercontent.com/ros2/ros2/master/ros2.repos; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then vcs import src < ros2.repos; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then src/ament/ament_tools/scripts/ament.py build --symlink-install; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then source $HOME/ros2_ws/install/local_setup.bash; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then npm install; fi

  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo docker run -v $(pwd):/root/rclnodejs --rm rcldocker bash -i -c '/root/rclnodejs/scripts/build.sh'; fi
